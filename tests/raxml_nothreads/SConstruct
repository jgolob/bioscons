import os
from os.path import join,split,splitext
import sys
import glob
import re

# use local (not system) version of the package
sys.path.insert(0, '../..')

from bioscons.fileutils import copyfile, split_path
from bioscons.raxml import raxml, check_raxml

vars = Variables()

varlist = [
    # files
    PathVariable('testfiles', 'input file directory', '../../tests/testfiles', PathVariable.PathIsDir),    
    # environment variables for executables
    ('RAXML_NTHREADS', '', 1)
    ]
vars.AddVariables(*varlist)
env = Environment(ENV=os.environ, variables=vars)

env['BUILDERS']['copyfile'] = copyfile
env['BUILDERS']['raxml'] = raxml

input_alignment = env.copyfile(
    source = '$testfiles/short16s.phy',
    target = Dir('.')
    )

print check_raxml(env)
info_file, result_file = env.raxml(input_alignment)

clean_extras = env.Command(
    target = None,
    source = [f for f in glob.glob('RAxML_*') + glob.glob('*.reduced') \
                  if not re.search(r'RAxML_(info|result)',f)],
    action='rm -f $SOURCES')


